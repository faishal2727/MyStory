package com.example.ceritaku.apiimport com.example.ceritaku.model.ResponseLoginimport com.example.ceritaku.model.ResponseRegisterimport com.example.ceritaku.model.ResponseStoryimport com.example.ceritaku.model.UploadStoryResponseimport okhttp3.MultipartBodyimport okhttp3.RequestBodyimport retrofit2.Responseimport retrofit2.http.*interface ApiService {    @FormUrlEncoded    @POST("login")    suspend fun login(        @Field("email") email: String,        @Field("password") password: String    ): ResponseLogin    @FormUrlEncoded    @POST("register")    suspend fun register(        @Field("name") name: String,        @Field("email") email: String,        @Field("password") password: String    ): ResponseRegister    @GET("stories")    suspend fun getStories(        @Header("Authorization") token: String,        @Query("page") page: Int,        @Query("size") size: Int,        @Query("location") location: Int    ): Response<ResponseStory>    @GET("stories")    suspend fun getStory(        @Header("Authorization") token: String,        @Query("page") page: Int,        @Query("size") size: Int,        @Query("location") location: Int    ): ResponseStory    @Multipart    @POST("stories")    suspend fun uploadStory(        @Header("Authorization") token: String,        @Part file: MultipartBody.Part,        @Part("description") description: RequestBody,        @Part("lat") lat: Double,        @Part("lon") lon: Double,    ): UploadStoryResponse    @Multipart    @POST("stories")    suspend fun uploadStoryNotLoc(        @Header("Authorization") token: String,        @Part file: MultipartBody.Part,        @Part("description") description: RequestBody    ): UploadStoryResponse}