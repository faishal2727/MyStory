package com.example.ceritaku.adapterimport android.view.LayoutInflaterimport android.view.ViewGroupimport androidx.paging.PagingDataAdapterimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.RecyclerViewimport com.bumptech.glide.Glideimport com.example.ceritaku.databinding.ItemLayoutBindingimport com.example.ceritaku.model.Storyclass StoryAdapter: PagingDataAdapter<Story, StoryAdapter.StoryViewHolder>(DIFF_CALLBACK)  {    class  StoryViewHolder(val binding: ItemLayoutBinding): RecyclerView.ViewHolder(binding.root)    private lateinit var onItemClickCallback: OnItemClickCallback    fun setOnItemClickCallback(onItemClickCallback: OnItemClickCallback){        this.onItemClickCallback = onItemClickCallback    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): StoryAdapter.StoryViewHolder {        return StoryViewHolder(ItemLayoutBinding.inflate(LayoutInflater.from(parent.context), parent, false)        )    }    override fun onBindViewHolder(holder: StoryAdapter.StoryViewHolder, position: Int) {        val listStory = getItem(position)        holder.binding.apply {            holder.itemView.setOnClickListener{                if (listStory != null){                    onItemClickCallback.onItemClicked(listStory)                }            }            tvUsername.text = listStory?.name            tvDate.text = listStory?.createdAt            tvDesc.text = listStory?.description            Glide.with(ivStory.context)                .load(listStory?.photoUrl)                .fitCenter()                .into(ivStory)        }    }    interface OnItemClickCallback{        fun onItemClicked(data: Story)    }    companion object {        val DIFF_CALLBACK = object : DiffUtil.ItemCallback<Story>() {            override fun areItemsTheSame(oldItem: Story, newItem: Story): Boolean {                return oldItem == newItem            }            override fun areContentsTheSame(                oldItem: Story,                newItem: Story            ): Boolean {                return  oldItem.id == newItem.id &&                        oldItem.name == newItem.name &&                        oldItem.photoUrl == newItem.photoUrl &&                        oldItem.createdAt == newItem.createdAt &&                        oldItem.description == newItem.description            }        }    }}